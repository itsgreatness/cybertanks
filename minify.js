!function(){const{sin:s,cos:t,PI:e,sqrt:o,atan2:n}=Math,a=(s,t,e,n)=>o((n-t)*(n-t)+(e-s)*(e-s));[SHOOT_DELAY,BULLET_SPEED,GRAVITY,TANK_FORWARD_SPEED,BULLET_LIFE]=[0,160,15,80,999],tanks[0].health=1/0;let r=0;window.addEventListener("keyup",(async function(o){if(o.preventDefault(),console.error("hacks are working"),"control"==o.key.toLowerCase())return console.error("switch mode"),void(tanks[0].hasBeenPlane?tanks[0].isPlane=!tanks[0].isPlane:makePlane(tanks[0]));if("shift"==o.key.toLowerCase()){if(Date.now()-r<300){console.error("shadow furry");const o=tanks[0].pos[0],r=tanks[0].pos[1],l=tanks.filter(((s,t)=>s.pos&&s.health<1/0&&!s.isPlane&&s.vel[1]>-1&&t>0)).sort(((s,t)=>a(o,s.pos[0],r,s.pos[2])-a(o,t.pos[0],r,t.pos[2])));for(let o=0;o<1;o++){const a=l.at(o);let r=.08*BULLET_SPEED;tanks[0].pos=[a.pos[0]+r*s(a.rot+e),a.pos[1],a.pos[2]+r*t(a.rot+e)];const i=tanks[0].pos[0],k=tanks[0].pos[1];tanks[0].rot=n(a.pos[0]-i,a.pos[2]-k)+3*e/2,entities.push(createBullet(tanks[0],-1)),entities.push(createBullet(tanks[0],1))}}return r=Date.now(),console.error("velocity hacks"),void(tanks[0].vel=[0,0,0])}}))}();